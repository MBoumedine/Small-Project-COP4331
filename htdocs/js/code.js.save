const urlBase = 'http://mblampprac.xyz/LAMPAPI';
const extension = 'php';

let userId = 0;
let Name = "";
//let lastName = "";

function doLogin()
{
	console.log("tried to log in");

	userId = 0;
	
	let username = document.getElementById("username").value;
	let password = document.getElementById("password").value;
	//let hash = md5( password );
	
	document.getElementById("loginResult").innerHTML = "";

	let tmp = {username:username,password:password};
	//let tmp = {username:username,password:hash};
	let jsonPayload = JSON.stringify( tmp );
	
	let url = urlBase + '/Login.' + extension;

	let xhr = new XMLHttpRequest();
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-type", "application/json; charset=UTF-8");
	try
	{
		xhr.onreadystatechange = function() 
		{
			// if readyState is 4 then the request is done, 200 means "OK"
			if (this.readyState == 4 && this.status == 200) 
			{
				let jsonObject = JSON.parse( xhr.responseText );
				userId = jsonObject.id;
		
				if( userId < 1 )
				{		
					document.getElementById("loginResult").innerHTML = "Username/Password combination incorrect";
					return;
				}
				console.log(userId);
				console.log("test1");
				//firstName = jsonObject.name;
				//lastName = jsonObject.lastName;
				//console.log("test2");
				//saveCookie();
	
				window.location.href = "dashboard.html";
			}
		};
		xhr.send(jsonPayload);
	}
	catch(err)
	{
		document.getElementById("loginResult").innerHTML = err.message;
	}

}

function doSignup()
{
	console.log("tried to sign up");

	userId = 0;
	
	let username = document.getElementById("username").value;
	let password = document.getElementById("password").value;
	//let hash = md5( password );
	
	document.getElementById("signupResult").innerHTML = "";

	let tmp = {username:username,password:password};
	//let tmp = {username:username,password:hash};
	let jsonPayload = JSON.stringify( tmp );
	
	let url = urlBase + '/Signup.' + extension;

	let xhr = new XMLHttpRequest();
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-type", "application/json; charset=UTF-8");
	try
	{
		xhr.onreadystatechange = function() 
		{
			// if readyState is 4 then the request is done, 200 means "OK"
			if (this.readyState == 4 && this.status == 200) 
			{
				let jsonObject = JSON.parse(xhr.responseText);
				
				if(jsonObject.error != "")
				{		
					document.getElementById("signupResult").innerHTML = "Username already exists";
					return;
				}

				//firstName = jsonObject.name;
				//lastName = jsonObject.lastName;
				//saveCookie();

				window.location.href = "index.html";
			}
		};
		xhr.send(jsonPayload);
	}
	catch(err)
	{
		document.getElementById("signupResult").innerHTML = err.message;
	}

}

function saveContact(){
	console.log("Made it into savecontact");

	const fullname = document.getElementById('fullname').value;
    const email = document.getElementById('email').value;
	const phone = document.getElementById('phone').value;
	
	let tmp = {name:fullname,email:email,phone_number:phone};
	let jsonPayload = JSON.stringify( tmp );
	let contacts = [];
	let url = urlBase + '/create_contact' + extension;

	let xhr = new XMLHttpRequest();
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-type", "application/json; charset=UTF-8");
	try
	{
		xhr.onreadystatechange = function() 
		{
			// if readyState is 4 then the request is done, 200 means "OK"
			if (this.readyState == 4 && this.status == 200) 
			{
				let jsonObject = JSON.parse(xhr.responseText);
				
				if(jsonObject.status == "success")
				{		
					// If successfully returned the list of contacts
					contacts = jsonObject.contacts;
					console.log("successfully added contact into database");
					return;
				}
			}
		};
		xhr.send(jsonPayload);
	}
	catch(err)
	{
		console.log("error retrieving contacts from database");
	}

    // Update contact in the original contacts array
    //let contacts = JSON.parse(localStorage.getItem('contacts')) || [];
    contacts[contactIndex] = { fullname, email, phone };
    localStorage.setItem('contacts', JSON.stringify(contacts));

    //alert('Contact updated successfully!');

    // Clear local storage
    localStorage.removeItem('editContactIndex');
    localStorage.removeItem('editContact');

    // Set a flag to activate the search tab after redirecting
    localStorage.setItem('activeTab', 'search');

    // Redirect back to the dashboard
    window.location.href = 'dashboard.html';
}

function showTab(event, tabName) {
    // Remove 'active' class from all tab content
    const tabs = document.querySelectorAll('.tab-content');
    tabs.forEach(tab => tab.classList.remove('active'));

    // Remove 'active-tab' class from all links
    const tabLinks = document.querySelectorAll('.tab-link');
    tabLinks.forEach(link => link.classList.remove('active-tab'));

    // Add 'active' class to the selected tab content
    document.getElementById(tabName).classList.add('active');

    // Add 'active-tab' class to the clicked tab link
    event.currentTarget.classList.add('active-tab');
}
/*
// Sample contact list for demonstration
let contacts = [
    { fullname: "John Doe", email: "john@example.com", phone: "123-456-7890" },
    { fullname: "Jane Smith", email: "jane@example.com", phone: "987-654-3210" },
	{ fullname: "John Doe", email: "jane@gmail.com", phone: "987-654-3210" }
];
*/

function searchContact() {
	console.log("tried to search contact");
    const name = document.getElementById('search-name').value.toLowerCase();
    const resultsDiv = document.getElementById('search-results');
    resultsDiv.innerHTML = ''; // Clear previous results

	// get list of contacts from the database
	
	let tmp = {name:name};
	let jsonPayload = JSON.stringify( tmp );
	let contacts = [];
	let url = urlBase + '/search_contact.' + extension;

	let xhr = new XMLHttpRequest();
	xhr.open("GET", url, true);
	xhr.setRequestHeader("Content-type", "application/json; charset=UTF-8");
	try
	{
		xhr.onreadystatechange = function() 
		{
			// if readyState is 4 then the request is done, 200 means "OK"
			if (this.readyState == 4 && this.status == 200) 
			{
				let jsonObject = JSON.parse(xhr.responseText);
				
				if(jsonObject.status == "success")
				{		
					// If successfully returned the list of contacts
					contacts = jsonObject.contacts;
					console.log("successfully retrieved contacts from database");
					return;
				}
			}
		};
		xhr.send(jsonPayload);
	}
	catch(err)
	{
		console.log("error retrieving contacts from database");
	}


    // Filter contacts based on the search input
    const filteredContacts = contacts.filter(contact => contact.fullname.toLowerCase().includes(name));

	print("length of filtered contacts: " + filteredContacts.length);
    if (filteredContacts.length > 0) {
        filteredContacts.forEach((contact, index) => {
            // Create a div to display each contact and a delete button
            const resultItem = document.createElement('div');
            resultItem.className = 'contact-item';
            resultItem.innerHTML = `
                <p>Name: ${contact.fullname}, Email: ${contact.email}, Phone: ${contact.phone}</p>
                <!-- Delete button added here -->
                <button onclick="deleteContact(${index})">Delete</button>
				<button onclick="editContact(${index})">Edit</button>

            `;
            resultsDiv.appendChild(resultItem);  // Add the contact to the results div
        });
    } else {
        resultsDiv.textContent = 'No contacts found.';
    }
}

function deleteContact(index) {
    // Remove the contact from the contacts array
    contacts.splice(index, 1);

    // Re-run the search to refresh the displayed contacts
    searchContact();
}

function updateContact() {
    const fullname = document.getElementById('fullname').value;
    const email = document.getElementById('email').value;
    const phone = document.getElementById('phone').value;

    // Update contact in the original contacts array
    let contacts = JSON.parse(localStorage.getItem('contacts')) || [];
    contacts[contactIndex] = { fullname, email, phone };
    localStorage.setItem('contacts', JSON.stringify(contacts));

    alert('Contact updated successfully!');

    // Clear local storage
    localStorage.removeItem('editContactIndex');
    localStorage.removeItem('editContact');

    // Set a flag to activate the search tab after redirecting
    localStorage.setItem('activeTab', 'search');

    // Redirect back to the dashboard
    window.location.href = 'dashboard.html';
}




/*
function saveCookie()
{
	let minutes = 20;
	let date = new Date();
	date.setTime(date.getTime()+(minutes*60*1000));	
	document.cookie = "Name=" + Name + ",userId=" + userId + ";expires=" + date.toGMTString();
}

function readCookie()
{
	userId = -1;
	let data = document.cookie;
	let splits = data.split(",");
	for(var i = 0; i < splits.length; i++) 
	{
		let thisOne = splits[i].trim();
		let tokens = thisOne.split("=");
		if( tokens[0] == "Name" )
		{
			Name = tokens[1];
		}
		else if( tokens[0] == "userId" )
		{
			userId = parseInt( tokens[1].trim() );
		}
	}
	
	if( userId < 0 )
	{
		window.location.href = "login.html";
	}
	else
	{
//		document.getElementById("userName").innerHTML = "Logged in as " + Name;
	}
}

function doLogout()
{
	userId = 0;
	firstName = "";
	lastName = "";
	document.cookie = "firstName= ; expires = Thu, 01 Jan 1970 00:00:00 GMT";
	window.location.href = "login.html";
}
*/
// TODO: Edit functionality to work like searching contacts
/*
function addColor()
{
	let newColor = document.getElementById("colorText").value;
	document.getElementById("colorAddResult").innerHTML = "";

	let tmp = {color:newColor,userId,userId};
	let jsonPayload = JSON.stringify( tmp );

	let url = urlBase + '/AddColor.' + extension;
	
	let xhr = new XMLHttpRequest();
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-type", "application/json; charset=UTF-8");
	try
	{
		xhr.onreadystatechange = function() 
		{
			if (this.readyState == 4 && this.status == 200) 
			{
				document.getElementById("colorAddResult").innerHTML = "Color has been added";
			}
		};
		xhr.send(jsonPayload);
	}
	catch(err)
	{
		document.getElementById("colorAddResult").innerHTML = err.message;
	}
	
}

function searchColor()
{
	let srch = document.getElementById("searchText").value;
	document.getElementById("colorSearchResult").innerHTML = "";
	
	let colorList = "";

	let tmp = {search:srch,userId:userId};
	let jsonPayload = JSON.stringify( tmp );

	let url = urlBase + '/SearchColors.' + extension;
	
	let xhr = new XMLHttpRequest();
	xhr.open("POST", url, true);
	xhr.setRequestHeader("Content-type", "application/json; charset=UTF-8");
	try
	{
		xhr.onreadystatechange = function() 
		{
			if (this.readyState == 4 && this.status == 200) 
			{
				document.getElementById("colorSearchResult").innerHTML = "Color(s) has been retrieved";
				let jsonObject = JSON.parse( xhr.responseText );
				
				for( let i=0; i<jsonObject.results.length; i++ )
				{
					colorList += jsonObject.results[i];
					if( i < jsonObject.results.length - 1 )
					{
						colorList += "<br />\r\n";
					}
				}
				
				document.getElementsByTagName("p")[0].innerHTML = colorList;
			}
		};
		xhr.send(jsonPayload);
	}
	catch(err)
	{
		document.getElementById("colorSearchResult").innerHTML = err.message;
	}
	
}
    */
